{"mappings":"AAAA,MAAM;IACF,YAAY,MAAM,CAAE;QAChB,IAAI,CAAC,UAAU;QAEf,IAAI,CAAC,QAAQ;IACjB;IAEA,SAAS;QACL,MAAM,SAAS,IAAI,CAAC;QAEpB,IAAK,IAAI,IAAI,GAAG,IAAI,YAAY,UAAU,QAAQ,IAAK;YACnD,MAAM,WAAW,YAAY,SAAS,CAAC,EAAE;YACzC,IAAI,YAAY,OAAO,UAAU;gBAC7B,IAAI,OAAO,SAAS,gBAAgB,WAChC;YAER;QACJ;QAEA,MAAM,QAAQ,CAAC,OAAO,KAAK,MAAQ,QAAQ,MAAM,MAAM,QAAQ,MAAM,MAAM;QAC3E,MAAM,cAAc,CAAC,MAAM,IAAI,QAAU,QAAQ,KAAK,KAAK,OAAO,KAAK,MAAM,OAAO,OAAO,MAAM,MAAM,MAAM,OAAO,OAAO,IAAI;QAG/H,IAAI,MAAM,OAAO,MAAM,IAAI,CAAC,SAAS;aAChC,IAAI,MAAM,OAAO,MAAM,IAAI,CAAC,SAAS;aACrC,IAAI,CAAC,QAAQ,YAAY,IAAI,CAAC,OAAO,GAAG;QAC7C,IAAI,MAAM,OAAO,MAAM,IAAI,CAAC,QAAQ,YAAY,IAAI,CAAC,OAAO,GAAG;QAE/D,MAAM,YAAY,OAAO;QACzB,SAAS,KAAK,IAAI,WAAW,WAAW;YAAC,IAAI,CAAC;YAAO,IAAI,CAAC;YAAO,IAAI,CAAC;SAAM;QAC5E,OAAO,WAAW,SAAS,CAAC,EAAE,EAAE,SAAS,CAAC,EAAE,EAAE,SAAS,CAAC,EAAE;QAE1D,IAAI,OAAO;QACX,IAAI,MAAM,OAAO,MACb,QAAQ;QAEZ,IAAI,MAAM,OAAO,MACb,QAAQ;QAEZ,OAAO,OAAO,KAAK,OAAO,MAAM;IACpC;AACJ","sources":["src/CarController.js"],"sourcesContent":["class CarController {\n    constructor(object) {\n        this._object = object\n\n        this._move = 0\n    }\n\n    update() {\n        const object = this._object\n        \n        for (let i = 0; i < BoxCollider.COLLIDERS.length; i++) {\n            const collider = BoxCollider.COLLIDERS[i]\n            if (collider != object.collider) {\n                if (object.collider.isCollisionWith(collider)) {\n                    return\n                }\n            }\n        }\n\n        const clamp = (value, min, max) => value < min ? min : value > max ? max : value\n        const moveTowards = (from, to, delta) => from == to ? to : from < to ? clamp(from + delta, from, to) : clamp(from - delta, to, from)\n        \n        \n        if (input.getKey('w')) this._move += 0.001\n        else if (input.getKey('s')) this._move -= 0.001\n        else this._move = moveTowards(this._move, 0, 0.001)\n        if (input.getKey('q')) this._move = moveTowards(this._move, 0, 0.01)\n        \n        const direction = object.right\n        glMatrix.vec3.mul(direction, direction, [this._move, this._move, this._move])\n        object.moveGlobal(direction[0], direction[1], direction[2])\n\n        let rotY = 0\n        if (input.getKey('a')) {\n            rotY += 1\n        }\n        if (input.getKey('d')) {\n            rotY -= 1\n        }\n        object.rotate(0.0, rotY * 0.01, 0.0)\n    }\n}"],"names":[],"version":3,"file":"index.3e05f1f8.js.map","sourceRoot":"/__parcel_source_root/"}